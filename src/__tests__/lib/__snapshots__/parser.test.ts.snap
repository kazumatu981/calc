// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`リグレッションテスト parse from string parse    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parse from string parse    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parse from string parse (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "32",
      },
    },
    "nodeType": "paren",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parse from string parse -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from string parse -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parse from string parse -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from string parse 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from string parse 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from string parse 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "123",
    },
  },
}
`;

exports[`リグレッションテスト parse from string parse 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from string parse 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parse from tokens parse    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parse from tokens parse (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "32",
      },
    },
    "nodeType": "paren",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "123",
    },
  },
}
`;

exports[`リグレッションテスト parse from tokens parse 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parse from tokens parse 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "32",
      },
    },
    "nodeType": "paren",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "123",
    },
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "32",
      },
    },
    "nodeType": "paren",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "value": "23",
      },
    },
    "nodeType": "paren",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "value": "123",
    },
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "value": "456",
  },
}
`;
