// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`リグレッションテスト parse from string parse    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parse from string parse    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parse from string parse (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-12-1",
            "position": 1,
            "type": "number",
            "value": "12",
          },
        ],
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-32-4",
            "position": 4,
            "type": "number",
            "value": "32",
          },
        ],
        "value": "32",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-3",
          "position": 3,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-0",
        "position": 0,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-6",
        "position": 6,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-45-9",
            "position": 9,
            "type": "number",
            "value": "45",
          },
        ],
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-12",
            "position": 12,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator---11",
          "position": 11,
          "type": "operator",
          "value": "-",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-8",
        "position": 8,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-14",
        "position": 14,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-7",
      "position": 7,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---7",
      "position": 7,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "operator---6",
            "position": 6,
            "type": "operator",
            "value": "-",
          },
          Token {
            "id": "number-456-7",
            "position": 7,
            "type": "number",
            "value": "456",
          },
        ],
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-11",
            "position": 11,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-10",
          "position": 10,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-5",
        "position": 5,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-13",
        "position": 13,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-4",
      "position": 4,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---5",
        "position": 5,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-456-6",
        "position": 6,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---4",
      "position": 4,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-*-6",
      "position": 6,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-456-8",
          "position": 8,
          "type": "number",
          "value": "456",
        },
      ],
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-123-12",
          "position": 12,
          "type": "number",
          "value": "123",
        },
      ],
      "value": "123",
    },
    "tokens": Array [
      Token {
        "id": "operator-*-11",
        "position": 11,
        "type": "operator",
        "value": "*",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-/-6",
      "position": 6,
      "type": "operator",
      "value": "/",
    },
  ],
}
`;

exports[`リグレッションテスト parse from string parse 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---6",
      "position": 6,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parse from tokens parse    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parse from tokens parse (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-12-1",
            "position": 1,
            "type": "number",
            "value": "12",
          },
        ],
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-32-4",
            "position": 4,
            "type": "number",
            "value": "32",
          },
        ],
        "value": "32",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-3",
          "position": 3,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-0",
        "position": 0,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-6",
        "position": 6,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-45-9",
            "position": 9,
            "type": "number",
            "value": "45",
          },
        ],
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-12",
            "position": 12,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator---11",
          "position": 11,
          "type": "operator",
          "value": "-",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-8",
        "position": 8,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-14",
        "position": 14,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-7",
      "position": 7,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---7",
      "position": 7,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "operator---6",
            "position": 6,
            "type": "operator",
            "value": "-",
          },
          Token {
            "id": "number-456-7",
            "position": 7,
            "type": "number",
            "value": "456",
          },
        ],
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-11",
            "position": 11,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-10",
          "position": 10,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-5",
        "position": 5,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-13",
        "position": 13,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-4",
      "position": 4,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---5",
        "position": 5,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-456-6",
        "position": 6,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---4",
      "position": 4,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-*-6",
      "position": 6,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-456-8",
          "position": 8,
          "type": "number",
          "value": "456",
        },
      ],
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-123-12",
          "position": 12,
          "type": "number",
          "value": "123",
        },
      ],
      "value": "123",
    },
    "tokens": Array [
      Token {
        "id": "operator-*-11",
        "position": 11,
        "type": "operator",
        "value": "*",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-/-6",
      "position": 6,
      "type": "operator",
      "value": "/",
    },
  ],
}
`;

exports[`リグレッションテスト parse from tokens parse 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---6",
      "position": 6,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-12-1",
            "position": 1,
            "type": "number",
            "value": "12",
          },
        ],
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-32-4",
            "position": 4,
            "type": "number",
            "value": "32",
          },
        ],
        "value": "32",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-3",
          "position": 3,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-0",
        "position": 0,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-6",
        "position": 6,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-45-9",
            "position": 9,
            "type": "number",
            "value": "45",
          },
        ],
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-12",
            "position": 12,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator---11",
          "position": 11,
          "type": "operator",
          "value": "-",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-8",
        "position": 8,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-14",
        "position": 14,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-7",
      "position": 7,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---7",
      "position": 7,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "operator---6",
            "position": 6,
            "type": "operator",
            "value": "-",
          },
          Token {
            "id": "number-456-7",
            "position": 7,
            "type": "number",
            "value": "456",
          },
        ],
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-11",
            "position": 11,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-10",
          "position": 10,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-5",
        "position": 5,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-13",
        "position": 13,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-4",
      "position": 4,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---5",
        "position": 5,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-456-6",
        "position": 6,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---4",
      "position": 4,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-*-6",
      "position": 6,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-456-8",
          "position": 8,
          "type": "number",
          "value": "456",
        },
      ],
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-123-12",
          "position": 12,
          "type": "number",
          "value": "123",
        },
      ],
      "value": "123",
    },
    "tokens": Array [
      Token {
        "id": "operator-*-11",
        "position": 11,
        "type": "operator",
        "value": "*",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-/-6",
      "position": 6,
      "type": "operator",
      "value": "/",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from string parseAsync 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---6",
      "position": 6,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync    123    1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync    123 1`] = `
SingleNode {
  "isNegative": false,
  "nodeType": "single",
  "tokens": Array [
    Token {
      "id": "number-123-3",
      "position": 3,
      "type": "number",
      "value": "123",
    },
  ],
  "value": "123",
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync (12+32)*(45-23) 1`] = `
BinaryNode {
  "left": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-12-1",
            "position": 1,
            "type": "number",
            "value": "12",
          },
        ],
        "value": "12",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-32-4",
            "position": 4,
            "type": "number",
            "value": "32",
          },
        ],
        "value": "32",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-3",
          "position": 3,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-0",
        "position": 0,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-6",
        "position": 6,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-45-9",
            "position": 9,
            "type": "number",
            "value": "45",
          },
        ],
        "value": "45",
      },
      "nodeType": "binary",
      "operator": "-",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-12",
            "position": 12,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator---11",
          "position": 11,
          "type": "operator",
          "value": "-",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-8",
        "position": 8,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-14",
        "position": 14,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-7",
      "position": 7,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123   -456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---7",
      "position": 7,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123*(-456+23) 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": ParenNode {
    "childRoot": BinaryNode {
      "left": SingleNode {
        "isNegative": true,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "operator---6",
            "position": 6,
            "type": "operator",
            "value": "-",
          },
          Token {
            "id": "number-456-7",
            "position": 7,
            "type": "number",
            "value": "456",
          },
        ],
        "value": "456",
      },
      "nodeType": "binary",
      "operator": "+",
      "right": SingleNode {
        "isNegative": false,
        "nodeType": "single",
        "tokens": Array [
          Token {
            "id": "number-23-11",
            "position": 11,
            "type": "number",
            "value": "23",
          },
        ],
        "value": "23",
      },
      "tokens": Array [
        Token {
          "id": "operator-+-10",
          "position": 10,
          "type": "operator",
          "value": "+",
        },
      ],
    },
    "nodeType": "paren",
    "tokens": Array [
      Token {
        "id": "leftParen-(-5",
        "position": 5,
        "type": "leftParen",
        "value": "(",
      },
      Token {
        "id": "rightParen-)-13",
        "position": 13,
        "type": "rightParen",
        "value": ")",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-*-4",
      "position": 4,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync -123--456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---0",
        "position": 0,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-123-1",
        "position": 1,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": true,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "operator---5",
        "position": 5,
        "type": "operator",
        "value": "-",
      },
      Token {
        "id": "number-456-6",
        "position": 6,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---4",
      "position": 4,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   * 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "*",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-*-6",
      "position": 6,
      "type": "operator",
      "value": "*",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   + 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   + 456*123 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "+",
  "right": BinaryNode {
    "left": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-456-8",
          "position": 8,
          "type": "number",
          "value": "456",
        },
      ],
      "value": "456",
    },
    "nodeType": "binary",
    "operator": "*",
    "right": SingleNode {
      "isNegative": false,
      "nodeType": "single",
      "tokens": Array [
        Token {
          "id": "number-123-12",
          "position": 12,
          "type": "number",
          "value": "123",
        },
      ],
      "value": "123",
    },
    "tokens": Array [
      Token {
        "id": "operator-*-11",
        "position": 11,
        "type": "operator",
        "value": "*",
      },
    ],
  },
  "tokens": Array [
    Token {
      "id": "operator-+-6",
      "position": 6,
      "type": "operator",
      "value": "+",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   / 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "/",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator-/-6",
      "position": 6,
      "type": "operator",
      "value": "/",
    },
  ],
}
`;

exports[`リグレッションテスト parseAsync from tokens parseAsync 123   - 456 1`] = `
BinaryNode {
  "left": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-123-0",
        "position": 0,
        "type": "number",
        "value": "123",
      },
    ],
    "value": "123",
  },
  "nodeType": "binary",
  "operator": "-",
  "right": SingleNode {
    "isNegative": false,
    "nodeType": "single",
    "tokens": Array [
      Token {
        "id": "number-456-8",
        "position": 8,
        "type": "number",
        "value": "456",
      },
    ],
    "value": "456",
  },
  "tokens": Array [
    Token {
      "id": "operator---6",
      "position": 6,
      "type": "operator",
      "value": "-",
    },
  ],
}
`;
